name: Release Wails Project

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04	
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            build-essential \
            pkg-config

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21' # Use the Go version compatible with Wails

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Use the Node.js version required by your frontend

      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend # Modify this if your frontend is in a different directory

      - name: Build Wails project for Linux
        run: wails build

      - name: Build Wails project for Windows
        run: wails build --platform windows

      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: netview-linux
          path: ./build/bin/netview  # Adjust the path if needed

      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: netview-windows.exe
          path: ./build/bin/netview.exe

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: |
            ## Release Notes
            - Auto-generated release notes here.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}

      - name: Upload Linux Asset to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/bin/netview
          asset_name: netview-linux-x64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}

      - name: Upload Windows Asset to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/bin/netview.exe
          asset_name: netview-windows-x64.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_TOKEN }}        